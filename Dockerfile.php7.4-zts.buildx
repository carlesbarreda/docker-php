FROM --platform=${BUILDPLATFORM} php:7.4.15-zts-alpine

ARG BUILDPLATFORM

# persistent dependencies
RUN set -eux; \
    apk add --no-cache \
        bash \
        tzdata \
	    libbz2 libintl icu-libs libldap libpq libxslt libzip c-client freetype libpng libjpeg-turbo \
	    libxpm libwebp imagemagick-libs xz-libs zstd-libs libmemcached zlib

# Install dependencies
RUN set -ex; \
    \
	apk add --no-cache --virtual .build-deps \
		$PHPIZE_DEPS \
		bzip2-dev gettext-dev icu-dev openldap-dev postgresql-dev libxslt-dev libzip-dev imap-dev \
		krb5-dev openssl-dev freetype-dev libpng-dev libjpeg-turbo-dev libxpm-dev libwebp-dev \
		autoconf g++ libtool make imagemagick-dev xz-dev zstd-dev libmemcached-dev zlib-dev \
		libedit-dev \
    ; \
    \
	docker-php-ext-configure gd --with-freetype --with-jpeg --with-xpm --with-webp; \
	docker-php-ext-configure imap --with-imap --with-imap-ssl --with-kerberos; \
	docker-php-ext-install -j$(nproc) \
		bz2 bcmath calendar exif gd gettext imap intl ldap mysqli pcntl pdo_mysql pdo_pgsql \
		shmop sockets sysvmsg sysvsem sysvshm xsl zip readline \
    ; \
    \
	docker-php-ext-enable opcache; \
	# apcu igbinary imagick msgpack xdebug
	echo -en 'no\n' | pecl install apcu; \
	pecl install igbinary; \
	echo -en 'autodetect\n' | pecl install imagick-3.4.4; \
	pecl install msgpack; \
	pecl install xdebug; \
	docker-php-ext-enable apcu igbinary imagick-3.4.4 msgpack xdebug; \
	# redis memcached
	echo -en 'yes\nyes\nyes\n' | pecl install redis; \
	echo -en 'no\nno\nno\nyes\nno\nyes\nno\nyes\nyes\n' | pecl install memcached; \
	docker-php-ext-enable redis memcached; \
	\
	# clean
	pecl clear-cache; \
	runDeps="$( \
		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions \
			| tr ',' '\n' \
			| sort -u \
			| awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
	)"; \
	apk add --no-network --virtual .php7.4-phpexts-rundeps $runDeps; \
    apk del --no-network .build-deps

# set recommended PHP.ini settings
# see https://secure.php.net/manual/en/opcache.installation.php
ENV MAX_EXECUTION_TIME 600
ENV MEMORY_LIMIT 512M
ENV UPLOAD_LIMIT 2048K
RUN set -ex; \
    \
    { \
        echo 'opcache.memory_consumption=128'; \
        echo 'opcache.interned_strings_buffer=8'; \
        echo 'opcache.max_accelerated_files=4000'; \
        echo 'opcache.revalidate_freq=2'; \
        echo 'opcache.fast_shutdown=1'; \
    } > $PHP_INI_DIR/conf.d/opcache-recommended.ini; \
    \
    { \
        echo 'session.cookie_httponly=1'; \
        echo 'session.use_strict_mode=1'; \
    } > $PHP_INI_DIR/conf.d/session-strict.ini; \
    \
    { \
        echo 'allow_url_fopen=Off'; \
        echo 'max_execution_time=${MAX_EXECUTION_TIME}'; \
        echo 'max_input_vars=10000'; \
        echo 'memory_limit=${MEMORY_LIMIT}'; \
        echo 'post_max_size=${UPLOAD_LIMIT}'; \
        echo 'upload_max_filesize=${UPLOAD_LIMIT}'; \
    } > $PHP_INI_DIR/conf.d/phpmyadmin-misc.ini; \
    \
    # https://wordpress.org/support/article/editing-wp-config-php/#configure-error-logging
    { \
# https://www.php.net/manual/en/errorfunc.constants.php
# https://github.com/docker-library/wordpress/issues/420#issuecomment-517839670
		echo 'error_reporting = E_ERROR | E_WARNING | E_PARSE | E_CORE_ERROR | E_CORE_WARNING | E_COMPILE_ERROR | E_COMPILE_WARNING | E_RECOVERABLE_ERROR'; \
		echo 'display_errors = Off'; \
		echo 'display_startup_errors = Off'; \
		echo 'log_errors = On'; \
		echo 'error_log = /dev/stderr'; \
		echo 'log_errors_max_len = 1024'; \
		echo 'ignore_repeated_errors = On'; \
		echo 'ignore_repeated_source = Off'; \
		echo 'html_errors = Off'; \
	} > $PHP_INI_DIR/conf.d/error-logging.ini

#docker build -t carlesbarreda/php:7.4.15-zts-alpine -f Dockerfile.php7.4-zts.buildx .
#docker run -ti --rm --name php7.4-zts-dev carlesbarreda/php:7.4.15-zts-alpine /bin/sh
